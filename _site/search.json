[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I’m a third year doctoral student at the University of Nevada, Reno studying plant-insect-natural enemy interactions.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Victoria Peechatt",
    "section": "",
    "text": "&lt;h1 style=\"font-size:50px\"&gt;I am John Doe&lt;/h1&gt;\n&lt;p&gt;And I'm a Photographer&lt;/p&gt;\n&lt;button&gt;Hire me&lt;/button&gt;\n\n\n\nPage Content.."
  },
  {
    "objectID": "outreach.html",
    "href": "outreach.html",
    "title": "Outreach",
    "section": "",
    "text": "American Beekeeping Federation Conference\n\n\n\noutreach\n\n\n\n\n\n\n\n\n\n\n2025-01-20\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "outreach/2025_1_BeeExpo.html",
    "href": "outreach/2025_1_BeeExpo.html",
    "title": "American Beekeeping Federation Conference",
    "section": "",
    "text": "News article"
  },
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Research",
    "section": "",
    "text": "data = read.csv(\"data/VTG2023_data.csv\")\nstr(data)\ncatdat &lt;- data %&gt;% \n  filter(immunedata == 1)\n\nggplot(catdat, aes(x = temp_mean)) + \n  geom_point(aes(y = viral_load_com,color = factor(viral_infected)))+\n  stat_smooth(aes(x = temp_mean, y=viral_load_com, group = viral_infected, \n                  colour = viral_infected), \n              method = glm,\n              formula = y ~ x, \n              se = T, fullrange = TRUE,\n              size=4,\n              show.legend = FALSE) + \n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\")+\n  labs(title = \"Viral loads \", \n       subtitle = \"(comparative index)\",)+\n  ylab(\"Viral load (log)\")  + \n  xlab(\"Temperature (mean °C)\") +\n  theme_grey(base_size = 28) \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\nggplot(catdat, aes(x = temp_mean)) + \n  geom_point(aes(y = viral_load_standard, color = factor(viral_infected)))+\n  stat_smooth(aes(x = temp_mean, y=viral_load_standard, group = viral_infected, \n                  color=viral_infected), \n              method = glm,\n              formula = y ~ x, \n              se = T, fullrange = TRUE,\n              size=4) + \n  labs(title = \"Viral loads \", \n       subtitle = \"(standard curve)\")+\n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\")+\n  ylab(\"Viral load  (10^y)\")  + \n  xlab(\"Temperature (mean °C)\") +\n  theme_grey(base_size = 28) +\n  facet_wrap(~ viral_infected)\n\nWarning: Removed 24 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 24 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nggplot(catdat, aes(x = temp_mean)) + \n  geom_point(aes(y = log(PO), color = factor(viral_infected)))+\n  stat_smooth(aes(x = temp_mean, y=log(PO), group = viral_infected, \n                  color=viral_infected), \n              method = glm,\n              formula = y ~ poly(x,2), \n              se = T, fullrange = TRUE,\n              size=4) + \n  labs(title = \"Phenoloxidase activity\", \n       subtitle = \"\")+\n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\")+\n  ylab(\"PO activity (log)\")  + \n  xlab(\"Temperature (mean °C)\") +\n  theme_grey(base_size = 28) + \n  facet_wrap(~viral_infected)\n\n\n\n\n\n\n\nggplot(catdat, aes(x = temp_mean)) + \n  geom_point(aes(y = melanization, color = factor(viral_infected)))+\n  stat_smooth(aes(x = temp_mean, y=melanization, group = viral_infected, \n                  color=viral_infected), \n              method = glm,\n              formula = y ~ poly(x,2), \n              se = T, fullrange = TRUE,\n              size=4) + \n  labs(title = \"Melanization\", \n       subtitle = \"(percentage of filament melanized)\")+\n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\")+\n  ylab(\"Melanization\")  + \n  xlab(\"Temperature (mean °C)\") +\n  theme_grey(base_size = 28) +\n  facet_wrap(~ viral_infected)\n\nWarning: Removed 47 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 47 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nggplot(catdat, aes(x = temp_mean)) + \n  geom_point(aes(y = log(hemocytes), color = factor(viral_infected)))+\n  stat_smooth(aes(x = temp_mean, y=log(hemocytes), group = viral_infected, \n                  color=viral_infected), \n              method = glm,\n              formula = y ~ poly(x,2), \n              se = T, fullrange = TRUE,\n              size=4) + \n  labs(title = \"Hemocyte Counts \", \n       subtitle = \"counts of hemocyte cells in 10µL hemolymph\")+\n  ylab(\"Hemocytes (log)\")  + \n  xlab(\"Temperature (mean °C)\") +\n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\")+\n  facet_wrap(~ viral_infected) + \n  theme_grey(base_size = 28)\n\n\n\n\n\n\n\n##########################################################333\n##########  PLOTS with covariates against each other ###########\nggplot(catdat, aes(x = log(hemocytes))) + \n  geom_point(aes(y = log(PO), color = factor(viral_infected)))+\n  labs(title = \"PO vs. Hemocyte counts\", \n       subtitle = \"\")+\n  ylab(\"PO ()\")  + \n  xlab(\"Hemocytes ()\") +\n  stat_smooth(aes(x = log(hemocytes), y=log(PO), color=factor(temp)), \n              method = glm,\n              formula = y ~ poly(x,2), \n              se = T, fullrange = TRUE,\n              size=4) + \n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\")+\n  theme_grey(base_size = 28) + \n  facet_grid(~temp)\n\n\n\n\n\n\n\nggplot(catdat, aes(x = log(hemocytes))) + \n  geom_point(aes(y = melanization))+\n  labs(title = \"\", \n       subtitle = \"Melanization vs. Hemocytes\")+\n  xlab(\"Hemocytes ()\") +\n  ylab(\"Melanization ()\")  + \n  stat_smooth(aes(x = log(hemocytes), y=melanization, color=factor(temp_mean)), \n              method = glm,\n              formula = y ~ poly(x,2), \n              se = T, fullrange = TRUE,\n              size=4) + \n  theme_grey(base_size = 28) + \n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\")+\n  facet_grid(~ temp)\n\nWarning: Removed 47 rows containing non-finite outside the scale range\n(`stat_smooth()`).\nRemoved 47 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nggplot(catdat, aes(x = log(hemocytes))) + \n  geom_point(aes(y = log(PO)))+\n  labs(title = \"PO vs. Hemocytes\", \n       subtitle = \"\")+\n  xlab(\"Hemocytes ()\") +\n  ylab(\"PO ()\")  + \n  stat_smooth(aes(x = log(hemocytes), y=log(PO), color=factor(temp_mean)), \n              method = glm,\n              formula = y ~ poly(x,2), \n              se = T, fullrange = TRUE,\n              size=4) + \n  theme_grey(base_size = 28) + \n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\")+\n  facet_grid(~ temp)\n\n\n\n\n\n\n\n#######################################\n### Viral load with covariates ########\n#######################################3\n\nggplot(catdat, aes(x = (viral_load_com))) + \n  geom_point(aes(y = log(hemocytes)))+\n  labs(title = \"Hemocytes vs. Viral load\", \n       subtitle = \"\")+\n  xlab(\"Viral Load ()\") +\n  ylab(\"Hemocytes ()\")  + \n  stat_smooth(aes(x = (viral_load_com), y=log(hemocytes), color=factor(temp_mean)), \n              method = glm,\n              formula = y ~ poly(x,2), \n              se = T, fullrange = TRUE,\n              size=4) + \n  theme_grey(base_size = 28) + \n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\")+\n  facet_grid(~ temp)\n\n\n\n\n\n\n\nggplot(catdat, aes(x = (viral_load_com))) + \n  geom_point(aes(y = melanization))+\n  labs(title = \"Melanization vs. Viral load\", \n       subtitle = \"\")+\n  xlab(\"Viral Load ()\") +\n  ylab(\"Melanization ()\")  + \n  stat_smooth(aes(x = (viral_load_com), y=melanization, color=factor(temp_mean)), \n              method = glm,\n              formula = y ~ poly(x,2), \n              se = T, fullrange = TRUE,\n              size=4) + \n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\")+\n  theme_grey(base_size = 28) + \n  facet_grid(~temp)\n\nWarning: Removed 47 rows containing non-finite outside the scale range\n(`stat_smooth()`).\nRemoved 47 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nggplot(catdat, aes(x = (viral_load_com))) + \n  geom_point(aes(y = PO))+\n  labs(title = \"PO vs. Viral load\", \n       subtitle = \"\")+\n  xlab(\"Viral Load ()\") +\n  ylab(\"PO ()\")  + \n  stat_smooth(aes(x = (viral_load_com), y=PO, color=factor(temp_mean)), \n              method = glm,\n              formula = y ~ poly(x,2), \n              se = T, fullrange = TRUE,\n              size=4) + \n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\")+\n  theme_grey(base_size = 28) + \n  facet_grid(~temp)\n\n\n\n\n\n\n\ncat.dat.long &lt;- catdat %&gt;%\n  pivot_longer(cols = c(hemocytes, PO, melanization), \n               names_to = \"variable\", \n               values_to = \"value\")\n\n# Define linetypes for each variable\nlinetype_mapping &lt;- c(\"hemocytes\" = \"dotted\",\n                      \"PO\" = \"dashed\",\n                      \"melanization\" = \"solid\")\n# Create the ggplot\nggplot(cat.dat.long, aes(x = viral_load_com, y = value)) +\n  geom_point(aes()) +\n  labs(title = \"Immune Parameters\", \n       subtitle = \"Regressions of all variables\") +\n  xlab(\"Viral Load\") +\n  ylab(\"Value\") + \n  stat_smooth(aes(group = variable, linetype = variable, \n                  color = factor(temp_mean)),\n              method = glm,\n              formula = y ~ poly(x, 2), \n              se = TRUE, \n              size = 1.5) + \n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\") +\n  theme_grey(base_size = 28) + \n  facet_grid(variable ~ temp_mean, scales = \"free\")\n\nWarning: Removed 47 rows containing non-finite outside the scale range\n(`stat_smooth()`).\nRemoved 47 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n#####################################\n### Stadardized variables plots #####\n#####################################\n\ncat.dat.scaled = apply(catdat[,c(6,7,10,11,12,13)], MARGIN = 2, scale)\ncat.dat.immune.scaled = cbind(catdat[,c(3,4,5)],cat.dat.scaled)\n\ndisplay_range = cat.dat.immune.scaled %&gt;%\n  filter(temp_mean == \"31.5\")\n\nrange(display_range$viral_load_com)\nrange(display_range$PO)\nrange(display_range$hemocytes)\nrange(display_range$melanization)\n\n\ndisplay_range_2 = cat.dat.immune.scaled %&gt;%\n  filter(temp_mean == \"22.5\")\n\nrange(display_range_2$viral_load_com)\n\n# Reshape your data to long format\ncat.dat.immune.long &lt;- cat.dat.immune.scaled %&gt;%\n  pivot_longer(cols = c(hemocytes, PO, melanization), \n               names_to = \"variable\", \n               values_to = \"value\")\n\n# Define linetypes for each variable\nlinetype_mapping &lt;- c(\"hemocytes\" = \"dotted\",\n                      \"PO\" = \"dashed\",\n                      \"melanization\" = \"solid\")\n# Create the ggplot\nggplot(cat.dat.immune.long, aes(x = viral_load_com, y = value)) +\n  geom_point(aes()) +\n  labs(title = \"Immune Parameters\", \n       subtitle = \"Regressions of standardized variables\") +\n  xlab(\"Viral Load\") +\n  ylab(\"Z-score\") + \n  stat_smooth(aes(group = variable, linetype = variable, \n                  color = factor(temp_mean)),\n              method = glm,\n              formula = y ~ poly(x,2), \n              se = TRUE, \n              size = 1.5,\n              fullrange = FALSE) + \n  guides(fill = \"none\", color = \"none\", linetype = \"none\", shape = \"none\") +\n  theme_grey(base_size = 28) + \n  facet_grid(variable ~ temp_mean)\n\nWarning: Removed 47 rows containing non-finite outside the scale range\n(`stat_smooth()`).\nRemoved 47 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n# make frequency of virus infected within control  - find and this will be the baseline \n# avg viral load per temp for baseline/double \n# make different models of sems after visualizing the variables \n# higher pvalues mean greater fit \n# Baseline / background infection \n# heightened / doubled / enhanced infection \n# vertical infection vs. vertical + oral infected \n\nsem_mod =   '\n  # observed outcomes to observed predictors\n    \n    PO + melanization ~ hemocytes + temp_mean + viral_load_com\n    hemocytes ~ temp_mean + viral_load_com\n    melanization ~ hemocytes\n    viral_load_com ~ temp_mean\n  \n'\nsem_fit &lt;- sem(sem_mod, data=cat.dat.immune.scaled)\nsummary(sem_fit)\n\nlavaanPlot(model = sem_fit,\n           node_options = list(shape = \"box\", fontname = \"Helvetica\"),\n           edge_options = list(color = \"grey\"), coefs = TRUE)\nsummary(sem_fit, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)"
  }
]