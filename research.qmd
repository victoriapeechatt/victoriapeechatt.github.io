---
title: "Research"
---

```{r include=FALSE, results='hide', warning=FALSE }

library(tidyverse)
library(lavaan)
library(lavaanPlot)


#scale_colour_paletteer_d("nationalparkcolors::Acadia")
#scale_color_paletteer_d("nationalparkcolors::Acadia")
#scale_fill_paletteer_d("nationalparkcolors::Acadia")
#paletteer_d("nationalparkcolors::Acadia")
```

```{r results='hide'}
data = read.csv("data/VTG2023_data.csv")
str(data)
catdat <- data %>% 
  filter(immunedata == 1)

ggplot(catdat, aes(x = temp_mean)) + 
  geom_point(aes(y = viral_load_com,color = factor(viral_infected)))+
  stat_smooth(aes(x = temp_mean, y=viral_load_com, group = viral_infected, 
                  colour = viral_infected), 
              method = glm,
              formula = y ~ x, 
              se = T, fullrange = TRUE,
              size=4,
              show.legend = FALSE) + 
  guides(fill = "none", color = "none", linetype = "none", shape = "none")+
  labs(title = "Viral loads ", 
       subtitle = "(comparative index)",)+
  ylab("Viral load (log)")  + 
  xlab("Temperature (mean °C)") +
  theme_grey(base_size = 28) 



ggplot(catdat, aes(x = temp_mean)) + 
  geom_point(aes(y = viral_load_standard, color = factor(viral_infected)))+
  stat_smooth(aes(x = temp_mean, y=viral_load_standard, group = viral_infected, 
                  color=viral_infected), 
              method = glm,
              formula = y ~ x, 
              se = T, fullrange = TRUE,
              size=4) + 
  labs(title = "Viral loads ", 
       subtitle = "(standard curve)")+
  guides(fill = "none", color = "none", linetype = "none", shape = "none")+
  ylab("Viral load  (10^y)")  + 
  xlab("Temperature (mean °C)") +
  theme_grey(base_size = 28) +
  facet_wrap(~ viral_infected)

ggplot(catdat, aes(x = temp_mean)) + 
  geom_point(aes(y = log(PO), color = factor(viral_infected)))+
  stat_smooth(aes(x = temp_mean, y=log(PO), group = viral_infected, 
                  color=viral_infected), 
              method = glm,
              formula = y ~ poly(x,2), 
              se = T, fullrange = TRUE,
              size=4) + 
  labs(title = "Phenoloxidase activity", 
       subtitle = "")+
  guides(fill = "none", color = "none", linetype = "none", shape = "none")+
  ylab("PO activity (log)")  + 
  xlab("Temperature (mean °C)") +
  theme_grey(base_size = 28) + 
  facet_wrap(~viral_infected)

ggplot(catdat, aes(x = temp_mean)) + 
  geom_point(aes(y = melanization, color = factor(viral_infected)))+
  stat_smooth(aes(x = temp_mean, y=melanization, group = viral_infected, 
                  color=viral_infected), 
              method = glm,
              formula = y ~ poly(x,2), 
              se = T, fullrange = TRUE,
              size=4) + 
  labs(title = "Melanization", 
       subtitle = "(percentage of filament melanized)")+
  guides(fill = "none", color = "none", linetype = "none", shape = "none")+
  ylab("Melanization")  + 
  xlab("Temperature (mean °C)") +
  theme_grey(base_size = 28) +
  facet_wrap(~ viral_infected)

ggplot(catdat, aes(x = temp_mean)) + 
  geom_point(aes(y = log(hemocytes), color = factor(viral_infected)))+
  stat_smooth(aes(x = temp_mean, y=log(hemocytes), group = viral_infected, 
                  color=viral_infected), 
              method = glm,
              formula = y ~ poly(x,2), 
              se = T, fullrange = TRUE,
              size=4) + 
  labs(title = "Hemocyte Counts ", 
       subtitle = "counts of hemocyte cells in 10µL hemolymph")+
  ylab("Hemocytes (log)")  + 
  xlab("Temperature (mean °C)") +
  guides(fill = "none", color = "none", linetype = "none", shape = "none")+
  facet_wrap(~ viral_infected) + 
  theme_grey(base_size = 28)

##########################################################333
##########  PLOTS with covariates against each other ###########
ggplot(catdat, aes(x = log(hemocytes))) + 
  geom_point(aes(y = log(PO), color = factor(viral_infected)))+
  labs(title = "PO vs. Hemocyte counts", 
       subtitle = "")+
  ylab("PO ()")  + 
  xlab("Hemocytes ()") +
  stat_smooth(aes(x = log(hemocytes), y=log(PO), color=factor(temp)), 
              method = glm,
              formula = y ~ poly(x,2), 
              se = T, fullrange = TRUE,
              size=4) + 
  guides(fill = "none", color = "none", linetype = "none", shape = "none")+
  theme_grey(base_size = 28) + 
  facet_grid(~temp)

ggplot(catdat, aes(x = log(hemocytes))) + 
  geom_point(aes(y = melanization))+
  labs(title = "", 
       subtitle = "Melanization vs. Hemocytes")+
  xlab("Hemocytes ()") +
  ylab("Melanization ()")  + 
  stat_smooth(aes(x = log(hemocytes), y=melanization, color=factor(temp_mean)), 
              method = glm,
              formula = y ~ poly(x,2), 
              se = T, fullrange = TRUE,
              size=4) + 
  theme_grey(base_size = 28) + 
  guides(fill = "none", color = "none", linetype = "none", shape = "none")+
  facet_grid(~ temp)

ggplot(catdat, aes(x = log(hemocytes))) + 
  geom_point(aes(y = log(PO)))+
  labs(title = "PO vs. Hemocytes", 
       subtitle = "")+
  xlab("Hemocytes ()") +
  ylab("PO ()")  + 
  stat_smooth(aes(x = log(hemocytes), y=log(PO), color=factor(temp_mean)), 
              method = glm,
              formula = y ~ poly(x,2), 
              se = T, fullrange = TRUE,
              size=4) + 
  theme_grey(base_size = 28) + 
  guides(fill = "none", color = "none", linetype = "none", shape = "none")+
  facet_grid(~ temp)

#######################################
### Viral load with covariates ########
#######################################3

ggplot(catdat, aes(x = (viral_load_com))) + 
  geom_point(aes(y = log(hemocytes)))+
  labs(title = "Hemocytes vs. Viral load", 
       subtitle = "")+
  xlab("Viral Load ()") +
  ylab("Hemocytes ()")  + 
  stat_smooth(aes(x = (viral_load_com), y=log(hemocytes), color=factor(temp_mean)), 
              method = glm,
              formula = y ~ poly(x,2), 
              se = T, fullrange = TRUE,
              size=4) + 
  theme_grey(base_size = 28) + 
  guides(fill = "none", color = "none", linetype = "none", shape = "none")+
  facet_grid(~ temp)

ggplot(catdat, aes(x = (viral_load_com))) + 
  geom_point(aes(y = melanization))+
  labs(title = "Melanization vs. Viral load", 
       subtitle = "")+
  xlab("Viral Load ()") +
  ylab("Melanization ()")  + 
  stat_smooth(aes(x = (viral_load_com), y=melanization, color=factor(temp_mean)), 
              method = glm,
              formula = y ~ poly(x,2), 
              se = T, fullrange = TRUE,
              size=4) + 
  guides(fill = "none", color = "none", linetype = "none", shape = "none")+
  theme_grey(base_size = 28) + 
  facet_grid(~temp)

ggplot(catdat, aes(x = (viral_load_com))) + 
  geom_point(aes(y = PO))+
  labs(title = "PO vs. Viral load", 
       subtitle = "")+
  xlab("Viral Load ()") +
  ylab("PO ()")  + 
  stat_smooth(aes(x = (viral_load_com), y=PO, color=factor(temp_mean)), 
              method = glm,
              formula = y ~ poly(x,2), 
              se = T, fullrange = TRUE,
              size=4) + 
  guides(fill = "none", color = "none", linetype = "none", shape = "none")+
  theme_grey(base_size = 28) + 
  facet_grid(~temp)

cat.dat.long <- catdat %>%
  pivot_longer(cols = c(hemocytes, PO, melanization), 
               names_to = "variable", 
               values_to = "value")

# Define linetypes for each variable
linetype_mapping <- c("hemocytes" = "dotted",
                      "PO" = "dashed",
                      "melanization" = "solid")
# Create the ggplot
ggplot(cat.dat.long, aes(x = viral_load_com, y = value)) +
  geom_point(aes()) +
  labs(title = "Immune Parameters", 
       subtitle = "Regressions of all variables") +
  xlab("Viral Load") +
  ylab("Value") + 
  stat_smooth(aes(group = variable, linetype = variable, 
                  color = factor(temp_mean)),
              method = glm,
              formula = y ~ poly(x, 2), 
              se = TRUE, 
              size = 1.5) + 
  guides(fill = "none", color = "none", linetype = "none", shape = "none") +
  theme_grey(base_size = 28) + 
  facet_grid(variable ~ temp_mean, scales = "free")

#####################################
### Stadardized variables plots #####
#####################################

cat.dat.scaled = apply(catdat[,c(6,7,10,11,12,13)], MARGIN = 2, scale)
cat.dat.immune.scaled = cbind(catdat[,c(3,4,5)],cat.dat.scaled)

display_range = cat.dat.immune.scaled %>%
  filter(temp_mean == "31.5")

range(display_range$viral_load_com)
range(display_range$PO)
range(display_range$hemocytes)
range(display_range$melanization)


display_range_2 = cat.dat.immune.scaled %>%
  filter(temp_mean == "22.5")

range(display_range_2$viral_load_com)

# Reshape your data to long format
cat.dat.immune.long <- cat.dat.immune.scaled %>%
  pivot_longer(cols = c(hemocytes, PO, melanization), 
               names_to = "variable", 
               values_to = "value")

# Define linetypes for each variable
linetype_mapping <- c("hemocytes" = "dotted",
                      "PO" = "dashed",
                      "melanization" = "solid")
# Create the ggplot
ggplot(cat.dat.immune.long, aes(x = viral_load_com, y = value)) +
  geom_point(aes()) +
  labs(title = "Immune Parameters", 
       subtitle = "Regressions of standardized variables") +
  xlab("Viral Load") +
  ylab("Z-score") + 
  stat_smooth(aes(group = variable, linetype = variable, 
                  color = factor(temp_mean)),
              method = glm,
              formula = y ~ poly(x,2), 
              se = TRUE, 
              size = 1.5,
              fullrange = FALSE) + 
  guides(fill = "none", color = "none", linetype = "none", shape = "none") +
  theme_grey(base_size = 28) + 
  facet_grid(variable ~ temp_mean)


# make frequency of virus infected within control  - find and this will be the baseline 
# avg viral load per temp for baseline/double 
# make different models of sems after visualizing the variables 
# higher pvalues mean greater fit 
# Baseline / background infection 
# heightened / doubled / enhanced infection 
# vertical infection vs. vertical + oral infected 

sem_mod =   '
  # observed outcomes to observed predictors
    
    PO + melanization ~ hemocytes + temp_mean + viral_load_com
    hemocytes ~ temp_mean + viral_load_com
    melanization ~ hemocytes
    viral_load_com ~ temp_mean
  
'
sem_fit <- sem(sem_mod, data=cat.dat.immune.scaled)
summary(sem_fit)

lavaanPlot(model = sem_fit,
           node_options = list(shape = "box", fontname = "Helvetica"),
           edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)




```
